name: Docker Publish

on:
  push:
    branches: [ master ] 
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    outputs: # Define outputs if other jobs depend on whether an image was built
      backend_built: ${{ steps.build-backend.outputs.did_build }}
      frontend_built: ${{ steps.build-frontend.outputs.did_build }}
      ml_api_built: ${{ steps.build-ml-api.outputs.did_build }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v44 # Or similar action
        with:
          
          files_ignore: |
            README.md
            .gitignore

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }} 
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Prepare image metadata (lowercase owner and repo)
        id: meta 
        run: |
          OWNER_LC=$(echo "${{ github.repository_owner }}" | tr '[:upper:]' '[:lower:]')
          REPO_NAME_LC=$(echo "${{ github.event.repository.name }}" | tr '[:upper:]' '[:lower:]') # Get repo name and lowercase it
          echo "owner_lc=${OWNER_LC}" >> $GITHUB_OUTPUT
          echo "backend_image_name=${REPO_NAME_LC}/fauxpas-backend" >> $GITHUB_OUTPUT
          echo "frontend_image_name=${REPO_NAME_LC}/fauxpas-frontend" >> $GITHUB_OUTPUT
          echo "ml_api_image_name=${REPO_NAME_LC}/fauxpas-ml-api" >> $GITHUB_OUTPUT
          # For the simple case where image name is just the sub-project name:
          # echo "backend_image_name_simple=fauxpas-backend" >> $GITHUB_OUTPUT 
          # (and use this if you prefer simpler image names directly under the owner)

      - name: Check if backend files changed
        id: backend-changes
        run: |
          echo "Checking backend..."
          if [[ "${{ steps.changed-files.outputs.any_changed }}" == "true" ]]; then
            # More specific check for backend directory
            if git diff --quiet HEAD^ HEAD -- ./backend; then
              echo "No changes in ./backend"
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "Changes detected in ./backend"
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "No files changed in the push according to tj-actions/changed-files"
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Backend image
        id: build-backend 
        if: steps.backend-changes.outputs.changed == 'true' || github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          file: ./backend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/${{ steps.meta.outputs.backend_image_name }}:latest
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/${{ steps.meta.outputs.backend_image_name }}:${{ github.sha }}
            ${{ startsWith(github.ref, 'refs/tags/') && format('ghcr.io/{0}/{1}:{2}', steps.meta.outputs.owner_lc, steps.meta.outputs.backend_image_name, github.ref_name) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set backend_built output
        if: steps.backend-changes.outputs.changed == 'true' || github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
        run: echo "did_build=true" >> $GITHUB_OUTPUT 
        id: set-backend-output

      - name: Check if frontend files changed
        id: frontend-changes
        run: |
          echo "Checking frontend..."
          if [[ "${{ steps.changed-files.outputs.any_changed }}" == "true" ]]; then
            if git diff --quiet HEAD^ HEAD -- ./frontend; then
              echo "No changes in ./frontend"
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "Changes detected in ./frontend"
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push Frontend image
        id: build-frontend
        if: steps.frontend-changes.outputs.changed == 'true' || github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/${{ steps.meta.outputs.frontend_image_name }}:latest
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/${{ steps.meta.outputs.frontend_image_name }}:${{ github.sha }}
            ${{ startsWith(github.ref, 'refs/tags/') && format('ghcr.io/{0}/{1}:{2}', steps.meta.outputs.owner_lc, steps.meta.outputs.frontend_image_name, github.ref_name) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set frontend_built output
        if: steps.frontend-changes.outputs.changed == 'true' || github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
        run: echo "did_build=true" >> $GITHUB_OUTPUT
        id: set-frontend-output

      - name: Check if ml_api files changed
        id: ml-api-changes
        run: |
          echo "Checking ml_api..."
          if [[ "${{ steps.changed-files.outputs.any_changed }}" == "true" ]]; then
            if git diff --quiet HEAD^ HEAD -- ./ml_api; then
              echo "No changes in ./ml_api"
              echo "changed=false" >> $GITHUB_OUTPUT
            else
              echo "Changes detected in ./ml_api"
              echo "changed=true" >> $GITHUB_OUTPUT
            fi
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: Build and push ML API image
        id: build-ml-api
        if: steps.ml-api-changes.outputs.changed == 'true' || github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v5
        with:
          context: ./ml_api
          file: ./ml_api/Dockerfile
          push: true
          tags: |
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/${{ steps.meta.outputs.ml_api_image_name }}:latest
            ghcr.io/${{ steps.meta.outputs.owner_lc }}/${{ steps.meta.outputs.ml_api_image_name }}:${{ github.sha }}
            ${{ startsWith(github.ref, 'refs/tags/') && format('ghcr.io/{0}/{1}:{2}', steps.meta.outputs.owner_lc, steps.meta.outputs.ml_api_image_name, github.ref_name) || '' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Set ml_api_built output
        if: steps.ml-api-changes.outputs.changed == 'true' || github.event_name == 'workflow_dispatch' || startsWith(github.ref, 'refs/tags/')
        run: echo "did_build=true" >> $GITHUB_OUTPUT
        id: set-ml-api-output